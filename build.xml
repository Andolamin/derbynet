<project name="DerbyNet" default="dist" basedir=".">
  <description>
    Web-based software for managing pinewood derby races
  </description>

  <property name="replay-dir" location="replay"/>
  <property name="replay-app.name" value="MacDerbyReplay"/>
  <property name="replay-app-dir" location="${replay-dir}/build/Release"/>
  <property name="timer-dir" location="timer"/>
  <property name="timer-jar-dir" location="${timer-dir}/dist/lib"/>
  <property name="docs-dir" location="docs"/>

  <target name="dist" depends="replay-dmg, timer-jar, docs-dist, generated-version.inc,
                               generated-build-date.inc, generated-commit-hash.inc">
<!--
      <loadresource property="rev-count">
          <file file="website/inc/generated-version.inc"/>
      </loadresource>
-->
      <!-- TODO: Unfortunately, this doesn't create a website/local directory when unzipped. -->
      <zip destfile="../DerbyNet-${git-rev-count}${git-dirty}-${DSTAMP}.zip">
          <fileset dir=".">
              <include name="MIT-LICENSE.txt"/>
              <include name="README.txt"/>
          </fileset>

          <mappedresources>
              <fileset dir=".">
                  <include name="website/**/*"/>
                  <exclude name="website/local/**"/>
              </fileset>
              <globmapper from="website/*" to="racemgr/*"/>
          </mappedresources>

          <mappedresources>
              <fileset dir="docs/dist">
                  <include name="**"/>
              </fileset>
              <globmapper from="*" to="docs/*"/>
          </mappedresources>

          <fileset dir=".">
              <include name="*.dmg"/>
          </fileset>
          <fileset dir="timer/dist/lib">
              <include name="*.jar"/>
          </fileset>
      </zip>

      <delete file="${replay-app.name}.dmg" quiet="yes" failonerror="false"/>
  </target>

  <target name="generated-version.inc">
      <exec executable="git" outputproperty="git-rev-count">
          <arg value="rev-list"/>
          <arg value="HEAD"/>
          <arg value="--count"/>
      </exec>

      <concat destfile="website/inc/generated-version.inc">
          <propertyresource name="git-rev-count"/>
      </concat>
  </target>

  <target name="generated-build-date.inc">
      <tstamp/>
      <concat destfile="website/inc/generated-build-date.inc">
          <propertyresource name="TODAY"/>
      </concat>
  </target>

  <target name="generated-commit-hash.inc">
      <exec executable="git" outputproperty="git-hash">
          <arg value="rev-parse"/>
          <arg value="HEAD"/>
      </exec>

      <exec executable="git" outputproperty="git-status-short">
          <arg value="status"/>
          <arg value="--short"/>
      </exec>
      <!-- If there's no output, git-status-short doesn't even get set.  If it
           IS set, this property element has no effect. -->
      <property name="git-status-short" value=""/>

      <loadresource property="git-dirty">
          <propertyresource name="git-status-short"/>
          <filterchain>
              <striplinebreaks/>
              <replaceregex pattern=".+" replace="-dirty" flags="s"/>
          </filterchain>
      </loadresource>
      <property name="git-dirty" value=""/>

      <concat destfile="website/inc/generated-commit-hash.inc">
          <propertyresource name="git-hash"/>
          <propertyresource name="git-dirty"/>
      </concat>
  </target>

  <target name="timer-jar">
      <ant dir="${timer-dir}"/>
  </target>

  <target name="docs-dist">
      <ant dir="${docs-dir}"/>
  </target>

<!-- From http://www.rkuntz.org/pmwiki.php?n=Code.AntDiskImage -->
<!-- Create a DMG - This only works on MacOSX (requires hdiutil) -->
<target name="replay-dmg" depends="replay-build-release"
        description="Create a DMG package for MacOSX (only works on MacOSX)">

    <!-- Set this property value to your application name -->

    <!-- Set this property value to a directory where you can 
         mount temporarily your images, for example /tmp -->
    <property name="mountdir"
              value="/tmp"/>

    <!-- Delete previously created DMG -->
    <delete file="${replay-app.name}.dmg"
            quiet="yes" failonerror="false"/>

    <!-- Create a temporary Disk Image -->
    <exec executable="/usr/bin/hdiutil" os="Mac OS X" failonerror="true">
      <arg value="create"/>
      <arg value="-srcfolder"/>
      <arg value="${replay-app-dir}/${replay-app.name}.app"/>
      <arg value="-volname"/>
      <arg value="${replay-app.name}"/>
      <arg value="-ov"/>
      <arg value="${replay-app.name}-tmp.dmg"/>
      <arg value="-format"/>
      <arg value="UDRW"/>
    </exec>

    <!-- Attach the temporary image -->
    <exec executable="/usr/bin/hdiutil" os="Mac OS X" failonerror="true">
      <arg value="attach"/>
      <arg value="${replay-app.name}-tmp.dmg"/>
      <arg value="-mountroot"/>
      <arg value="${mountdir}/"/>
    </exec>

    <!-- Copy the background, the volume icon and DS_Store files -->
<!--
    <mkdir dir="${mountdir}/${replay-app.name}/.background"/>
    <copy file="background.png"
          tofile="${mountdir}/${replay-app.name}/.background/background.png"
          overwrite="true"/>
    <copy file="VolumeIcon.icns"
          tofile="${mountdir}/${replay-app.name}/.VolumeIcon.icns"
          overwrite="true"/>
    <copy file="DS_Store"
          tofile="${mountdir}/${replay-app.name}/.DS_Store"
          overwrite="true"/>
-->

    <!-- Indicate that we want a custom icon -->
<!--
    <exec executable="/Developer/Tools/SetFile" os="Mac OS X">
      <arg value="-a"/>
      <arg value="C"/>
      <arg value="${mountdir}/${replay-app.name}"/>
    </exec>
-->

    <!-- Add a symbolic link to the Applications directory -->
    <symlink link="${mountdir}/${replay-app.name}" resource="/Applications"/>

    <!-- Detach the temporary image -->
    <exec executable="/usr/bin/hdiutil" os="Mac OS X" failonerror="true">
      <arg value="detach"/>
      <arg value="${mountdir}/${replay-app.name}"/>
    </exec>

    <!-- Compress it to a new image -->
    <exec executable="/usr/bin/hdiutil" os="Mac OS X" failonerror="true">
      <arg value="convert"/>
      <arg value="${replay-app.name}-tmp.dmg"/>
      <arg value="-format"/>
      <arg value="UDZO"/>
      <arg value="-o"/>
      <arg value="${replay-app.name}.dmg"/>
    </exec>

    <!-- Delete the temporary image -->
    <delete file="${replay-app.name}-tmp.dmg"
            quiet="yes" failonerror="false"/>
</target>

<target name="replay-build-release"
        description="(Mac only)">
            <exec executable="/usr/bin/xcodebuild" os="Mac OS X">
                <arg value="-project"/>
                <arg value="replay/MacDerbyReplay.xcodeproj"/>
                <arg value="-configuration"/>
                <arg value="Release"/>
                <arg value="build"/>
            </exec>
</target>

<target name="demo">
    <ant dir="demo"/>
</target>

</project>
