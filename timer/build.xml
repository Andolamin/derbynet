<project name="timer" default="dist" basedir=".">
    <description>
        Timer manager for pinewood derby software
    </description>
   <!-- NOTE The default target does NOT perform a clean build; do an explicit
        'clean' when in doubt. -->
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib" location="../lib"/>

  <!-- Should be inherited from invoking task;
       these definitions are only backups -->
  <property name="release-series" value="development-build"/>
  <property name="git-rev-count" value=""/>
  <property name="git-dirty" value=""/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" includeantruntime="false"
           source="1.7" target="1.7">
        <classpath>
            <pathelement path="${src}"/>
            <pathelement location="${lib}/jssc.jar"/>
        </classpath>
    </javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <jar jarfile="${dist}/lib/derby-timer.jar">
        <manifest>
            <attribute name="Main-Class" value="org.jeffpiazza.derby.TimerMain"/>
            <attribute name="Built-By" value="${user.name}"/>
            <section name="common">
                <attribute name="Implementation-Version" value="${git-rev-count}${git-dirty} ${TODAY}"/> 
            </section>
            <section name="derbynet">
                <attribute name="version" value="${release-series}-${git-rev-count}${git-dirty}-${DSTAMP}"/>
            </section>
        </manifest>

        <fileset  dir="${build}">
            <exclude name="**/*Test.*"/>
            <exclude name="**/*Test$*"/>
        </fileset>
        <fileset dir="../website/img">
            <include name="status/*.png"/>
        </fileset>
        <!--zipgroupfileset dir="lib" includes="*.jar" /--> 
        <zipgroupfileset dir="${lib}" includes="jssc.jar"/>
    </jar>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>
